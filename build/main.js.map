{"version":3,"sources":["../../src/utils/map.service.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/providers/login.ts","../../src/pages/map-page/map-page.ts","../../src/pages/real-time/real-time.ts","../../src/utils/geocoding.service.ts","../../src/pages/groups-page/groups-page.ts","../../src/pages/historical/historical.ts","../../src/pages/historical-form/historical-form.ts","../../src/pages/paths-list/paths-list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/utils/headers.ts","../../src/objects/real-time.ts","../../src/providers/global.config.ts","../../src/providers/real-time.service.ts","../../src/providers/data-management.service.ts","../../src/providers/historical.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Map } from 'leaflet';\nimport 'leaflet';\nimport Marker = L.Marker;\nimport Icon = L.Icon;\nimport LatLngExpression = L.LatLngExpression;\nimport FeatureGroup = L.FeatureGroup;\nimport Polygon = L.Polygon;\nimport Polyline = L.Polyline;\nimport CircleMarker = L.CircleMarker;\nimport Circle = L.Circle;\nimport { RtMarker, newRtMarker } from \"./marker\";\nimport { imagesDir } from \"../providers/global.config\";\n\n@Injectable()\nexport class MapService {\n\n    public map: Map;\n    public baseMaps: any;\n\n    public drawnItems: FeatureGroup;\n\n    public mapLoaded: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public markerWasAdded: EventEmitter<any> = new EventEmitter<any>();\n    public markerWasEdited: EventEmitter<any> = new EventEmitter<any>();\n\n    public polygons: Polygon[] = [];\n    public markers: Marker[] = [];\n    public polylines: Polyline[] = [];\n    public circles: Circle[] = [];\n    public newRtMarkers: newRtMarker[] = [];\n    public rtMarkers: RtMarker[] = [];\n\n    public markersPoi: Marker[] = [];\n    public polygonsPoi: Polygon[] = [];\n\n    constructor() {\n        this.baseMaps = {\n            RimTelecom: L.tileLayer(\"https://api.mapbox.com/styles/v1/aminehn/ciycvpk1800e42rool43biorb/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYW1pbmVobiIsImEiOiJjaXg5M2FuYmwwMDN0Mm9udTNtbm10MmF2In0.TCtNRI8pQSawNt927GPoDg\", {\n                attribution: '&copy; Rimtelecom map',\n                id: 'mapbox.streets',\n                maxZoom: 20,\n                maxNativeZoom: 17,\n                accessToken: 'pk.eyJ1IjoiYW1pbmVobiIsImEiOiJjaXg5M2FuYmwwMDN0Mm9udTNtbm10MmF2In0.TCtNRI8pQSawNt927GPoDg'\n            })/*,\n            OpenStreetMap: L.tileLayer(\"http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\n                maxZoom: 20,\n                maxNativeZoom: 17,\n                attribution: '&copy; <a href=\"rimtelecom.ma\">Rim telecom</a>, Tiles courtesy of <a href=\"http://hot.openstreetmap.org/\" target=\"_blank\">Humanitarian OpenStreetMap Team</a>'\n            }),\n            Esri: L.tileLayer(\"http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\", {\n                attribution: 'Rimtelecom'\n            }),\n            CartoDB: L.tileLayer(\"http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\", {\n                maxZoom: 20,\n                maxNativeZoom: 17,\n                attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>'\n            }),\n            Esri_WorldImagery: L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n                maxZoom: 20,\n                maxNativeZoom: 17,\n                attribution: 'Rimtelecom'\n            })*/\n        };\n    }\n\n    addRtMarker(rtMarker: RtMarker) {\n        rtMarker.value.setIcon(rtMarker.icon);\n        this.rtMarkers.push(rtMarker);\n        rtMarker.value.addTo(this.map);\n    }\n\n    updateRtMarkertest(coordinate: any,popup: any,icon: any,id: any,isCurrentPathClicked: boolean) {\n        //tester si la liste est vide\n        //si oui \n        \n        if(this.newRtMarkers == null || this.newRtMarkers.length == 0){\n        let marker = L.marker(L.latLng(coordinate.lat, coordinate.lng));\n        marker.addTo(this.map);\n        marker.bindPopup(popup);\n        marker.setIcon(icon);\n        marker.on('click', () => {this.map.setView(coordinate, 14);});\n        this.newRtMarkers.push({id: id ,marker: marker});\n    }  else {\n                this.newRtMarkers.map(rt => {\n            if (rt.id == id) {\n               //rt.marker.remove();\n            this.newRtMarkers.splice(this.newRtMarkers.indexOf(rt),1);\n            rt.marker.setLatLng(coordinate);\n            rt.marker.setIcon(icon);\n            rt.marker.getPopup().setContent(popup);\n            if(isCurrentPathClicked == true)\n                {let marker = L.marker(L.latLng(coordinate.lat, coordinate.lng));\n                    marker.setIcon(new Icon({\n                        iconUrl: imagesDir + \"green-point.png\",\n                        iconAnchor: [2, 2]\n                    }));\n                    this.addMarker(marker);\n                    let points = [];\n                    points.push(rt.marker.getLatLng())\n                    points.push(coordinate.value.getLatLng());\n                    let polyline = L.polyline(points, { color: '#0031D9', weight: 3 });\n                    this.addPolyline(polyline);\n                }\n            }\n            });\n    }\n\n    }\n\n    updateRtMarker(rtMarker: RtMarker, isCurrentPathClicked: boolean) {\n        let ok: boolean = false;\n        this.rtMarkers.map(rt => {\n            if (rt.id == rtMarker.id) {\n                if (isCurrentPathClicked == true) {\n                    let marker = new Marker(rt.value.getLatLng());\n                    marker.setIcon(new Icon({\n                        iconUrl: imagesDir + \"green-point.png\",\n                        iconAnchor: [2, 2]\n                    }));\n                    /*marker.on('click', () => {\n                        this.map.setView(rt.value.getLatLng(), 17);\n                    });*/\n                    this.addMarker(marker);\n                    let points = [];\n                    points.push(rt.value.getLatLng())\n                    points.push(rtMarker.value.getLatLng());\n                    let polyline = L.polyline(points, { color: '#0031D9', weight: 3 });\n                    this.addPolyline(polyline);\n                }\n                rt.value.setLatLng(rtMarker.value.getLatLng());\n                //rt.value.getPopup().setContent(rtMarker.value.getPopup().getContent());\n                /*rt.value.on('click', () => {\n                    this.map.setView(rtMarker.value.getLatLng(), 16);\n                });*/\n                rt.value.options.rotationAngle = rtMarker.angle;\n                /*rt.value.setIcon(rtMarker.icon);*/\n                ok = true;\n            }\n        });\n        if (!ok) {\n            rtMarker.value.setIcon(rtMarker.icon);\n            this.rtMarkers.push(rtMarker);\n            rtMarker.value.addTo(this.map);\n        }\n    } \n\n    removeAllRtMarkers() {\n        this.newRtMarkers.forEach(m => {\n            this.map.removeLayer(m.marker);\n        });\n        this.newRtMarkers = [];\n    }\n\n    setView(coordinate: any) {\n        this.map.setView(coordinate, 15);\n    }\n\n    addCircle(circle: Circle) {\n        this.circles.push(circle);\n        circle.addTo(this.map);\n    }\n\n    removeCirclesFromMap() {\n        this.circles.forEach(m => {\n            this.map.removeLayer(m);\n        });\n        this.circles = [];\n    }\n\n    addMarker(marker: Marker) {\n        this.markers.push(marker);\n        marker.addTo(this.map);\n    }\n\n    addMarkerPoi(marker: Marker) {\n        this.markersPoi.push(marker);\n        marker.addTo(this.map);\n    }\n\n    removeMarkersPoiFromMap() {\n        this.markersPoi.forEach(m => {\n            this.map.removeLayer(m);\n        });\n        this.markersPoi = [];\n    }\n\n    removeMarker(index: number) {\n        this.map.removeLayer(this.markers[index]);\n        delete this.markers[index];\n    }\n\n    addMarkersToMap() {\n        this.markers.forEach(marker => {\n            marker.addTo(this.map);\n        })\n    }\n\n    removeMarkersFromMap() {\n        this.markers.forEach(m => {\n            this.map.removeLayer(m);\n        });\n        this.markers = [];\n    }\n\n    addPolyline(polyline: Polyline) {\n        this.polylines.push(polyline);\n        polyline.addTo(this.map);\n    }\n\n    removePolylinesFromMap() {\n        this.polylines.forEach(m => {\n            this.map.removeLayer(m);\n        });\n        this.polylines = [];\n    }\n\n    addPolygon(polygon: Polygon) {\n        this.polygons.push(polygon);\n        polygon.addTo(this.map);\n    }\n\n    addPolygonPoi(polygon: Polygon) {\n        this.polygonsPoi.push(polygon);\n        polygon.addTo(this.map);\n    }\n\n\n\n    removePolygon(index: number) {\n        //this.map.removeLayer(this.polygons[index]);\n        delete this.polygons[index];\n    }\n\n    addPolygonsToMap() {\n        this.polygons.forEach(Polygon => {\n            Polygon.addTo(this.map);\n        })\n    }\n\n    removePolygonsFromMap() {\n        this.polygons.forEach(m => {\n            this.map.removeLayer(m);\n        });\n        this.polygons = [];\n    }\n\n    removePolygonsPoiFromMap() {\n        this.polygonsPoi.forEach(m => {\n            this.map.removeLayer(m);\n        });\n        this.polygonsPoi = [];\n    }\n\n    resetMap() {\n        this.removeMarkersFromMap();\n        this.removePolygonsFromMap();\n        this.removePolylinesFromMap();\n    }\n\n    disableMouseEvent(elementId: string) {\n        let element = <HTMLElement>document.getElementById(elementId);\n        L.DomEvent.disableClickPropagation(element);\n        L.DomEvent.disableScrollPropagation(element);\n    };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/map.service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 145;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 145\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 188;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 188\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController,ToastController } from 'ionic-angular';\nimport {Login} from '../../providers/login';\nimport {MapPage} from '../map-page/map-page';\nimport {RealTimeService} from '../../providers/real-time.service';\nimport {HistoricalService} from '../../providers/historical.service';\nimport { DataManagementService } from '../../providers/data-management.service';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  login: String = null;\n  mdp: String = null;\n\n  constructor(private historicalService: HistoricalService,private realTimeService: RealTimeService,private dataManagementService: DataManagementService, public navCtrl: NavController,private signinService: Login,private toastController: ToastController) {\n\n  }\n\n  onSubmit() {\n    this.signinService.login({\"username\":this.login,\"password\":this.mdp}).subscribe(\n      token => {\n          this.goToRt();\n          this.signinService.token = token.token;\n          this.realTimeService.token = token.token;\n          this.historicalService.token = token.token;\n          this.dataManagementService.token = token.token;\n      }\n      , ()=> {\n        let toast = this.toastController.create({\n          message: 'Authentification Echouée!',\n          duration: 2000\n        });\n        toast.present();\n      });\n  }\n\n  goToRt(){\n    this.navCtrl.push(MapPage, {\n      value: null\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { dns } from \"./global.config\";\nimport { contentHeaders, createAuthorizationHeader } from \"../utils/headers\";\n\n@Injectable()\nexport class Login {\n\n  token: string;\n\n  constructor(public http: Http) {\n    console.log('Hello Login Provider');\n  }\n\n  login(credentials: any) {\n    return this.http.post(dns + 'signin', credentials, { headers: contentHeaders }).map(res => res.json());\n  }\n\n  logout() {\n    let headers = new Headers({ 'Accept': 'application/json' });\n    createAuthorizationHeader(headers);\n    return this.http.post(dns + 'signout', {}, { headers: headers }).map(res => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/login.ts","import { Component } from '@angular/core';\nimport { NavController,NavParams } from 'ionic-angular';\nimport { RealTime } from '../real-time/real-time';\nimport { Historical } from '../historical/historical';\n\n@Component({\n  selector: 'page-map-page',\n  templateUrl: 'map-page.html'\n})\nexport class MapPage {\n\n  realTimeRoot: any = RealTime;\n  historicalRoot: any = Historical;\n\n  constructor(public navCtrl: NavController) {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/map-page/map-page.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ToastController, ModalController } from 'ionic-angular';\nimport { MapService } from \"../../utils/map.service\";\nimport { DecimalPipe} from \"@angular/common\";\nimport { RealTimeService } from '../../providers/real-time.service';\nimport { DataManagementService } from '../../providers/data-management.service';\nimport { GeocodingService } from '../../utils/geocoding.service';\nimport { RealTimeRecord, Group, Vehicule } from \"../../objects/real-time\";\nimport { GroupsPage } from '../groups-page/groups-page';\nimport { Subscription } from \"rxjs\";\nimport { imagesDir } from \"../../providers/global.config\";\nimport Marker = L.Marker;\nimport Icon = L.Icon;\nimport { Observable } from 'rxjs/Rx';\nimport 'leaflet';\n\n\n@Component({\n  selector: 'page-real-time',\n  templateUrl: 'real-time.html',\n})\nexport class RealTime {\n\n  allGroups: Subscription;\n  allRealTimeRecords: Subscription;\n  groups: Group[];\n  searchWord: string = '';\n  newRealTimeRecords: RealTimeRecord[] = null;\n  oldRealTimeRecords: RealTimeRecord[] = null;\n  angles: Map<number, number> = new Map();\n  isCurrentPathClicked: boolean = false;\n  pathDrawn: boolean = false;\n  previousPathdrawn: boolean = false;\n  currentPathClickedDeviceIds: number[] = null;\n  selectedDevice : any;\n\n  constructor( private pipe: DecimalPipe,public modalCtrl: ModalController, private geocodingService: GeocodingService, private dataManagementService: DataManagementService, private toastController: ToastController, private realTimeService: RealTimeService, public navCtrl: NavController, public navParams: NavParams, public mapService: MapService) {\n  }\n\n  ionViewWillEnter() {\n    this.init();\n  }\n\n  init() {\n    this.initMap();\n    this.mapService.removeAllRtMarkers();\n    this.loadGroups();\n    Observable.interval(1000 * 60).subscribe(x => {\n      this.getAllRealTimeRecords();\n    });\n  }\n\n  initMap() {\n    if (this.mapService.map) this.mapService.map.remove();\n    let map = L.map('map', {\n      zoomControl: false,\n      center: L.latLng(32.586163, -9.912118),\n      zoom: 6,\n      minZoom: 3,\n      maxZoom: 20,\n      maxNativeZoom: 17,\n      layers: [this.mapService.baseMaps.RimTelecom]\n    });\n    L.control.zoom({ position: 'topright' }).addTo(map);\n    this.mapService.map = map;\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RealTime');\n  }\n\n  openGroupsModal() {\n    let groupModal = this.modalCtrl.create(GroupsPage, { groups: this.groups });\n    groupModal.present();\n    groupModal.onDidDismiss(selectedDevice => {\n      if (selectedDevice != null && selectedDevice != 0 && selectedDevice != this.selectedDevice) {\n        this.mapService.removeAllRtMarkers();\n        this.clearPolylines();\n        this.selectedDevice = selectedDevice;\n        this.goToRealTimeRecord(selectedDevice);\n\n      }\n    });\n  }\n\n  loadGroups() {\n    this.allGroups = this.realTimeService.getAllGroups(this.searchWord).subscribe(groupes => {\n      this.groups = groupes;\n      this.openGroupsModal();\n      this.groups.forEach(group => {\n        group.vehicules.forEach(vehicule => {\n          vehicule.realTimeRecord = new RealTimeRecord();\n          this.getAllRealTimeRecords();\n        })\n      });\n    });\n  }\n   searchGroup(any) {\n        this.loadGroups();\n    }\n\n\n  goToRealTimeRecord(idRealTimeRecord: number) {\n    this.newRealTimeRecords.forEach(realTimeRecord => {\n\n      if (realTimeRecord.idRealTimeRecord == idRealTimeRecord) {\n        //this.clearPolylines();\n        this.mapService.map.setView(realTimeRecord.coordinate, 15);\n        this.trackRealTimeRecord(realTimeRecord);\n       \n      }\n    });\n  }\n\n  getAllRealTimeRecords() {\n    this.allRealTimeRecords = this.realTimeService.getAllRealTimeRecords().subscribe(realTimeRecords => {\n      if (this.newRealTimeRecords) {\n        this.oldRealTimeRecords = this.newRealTimeRecords;\n      }\n      this.newRealTimeRecords = realTimeRecords;\n      realTimeRecords.forEach(realTimeRecord => {\n        realTimeRecord.vehicule = this.getVehicule(realTimeRecord.idRealTimeRecord);\n        this.trackRealTimeRecord(realTimeRecord);\n\n        if (this.oldRealTimeRecords) {\n          this.oldRealTimeRecords.map(oldRealTimeRecord => {\n            if (oldRealTimeRecord.idRealTimeRecord === realTimeRecord.idRealTimeRecord) {\n              if (realTimeRecord.speed > 0 && this.previousPathdrawn == false && realTimeRecord.idRealTimeRecord == this.selectedDevice) {\n                this.displayCurrentPath(realTimeRecord.idRealTimeRecord);\n              }\n              if (oldRealTimeRecord.speed == 0 && realTimeRecord.speed > 0) {\n                let toast = this.toastController.create({\n                  message: realTimeRecord.mark + ' à démarré !',\n                  duration: 2000,\n                  position: 'top'\n                });\n                toast.present();\n                this.isCurrentPathClicked = true;\n                if(this.currentPathClickedDeviceIds != null)\n                this.currentPathClickedDeviceIds.push(realTimeRecord.idRealTimeRecord);\n                if(this.previousPathdrawn == false && realTimeRecord.idRealTimeRecord == this.selectedDevice){\n                  this.displayCurrentPath(realTimeRecord.idRealTimeRecord);\n                }\n              }\n              if ((oldRealTimeRecord.speed > 0 && realTimeRecord.speed == 0) && realTimeRecord.ignition == true) {\n                let toast = this.toastController.create({\n                  message: realTimeRecord.vehicule.mark + \" s'est arrêté provisoirement!\",\n                  duration: 2000,\n                  position: 'top'\n                });\n                toast.present();\n              }\n              if ((oldRealTimeRecord.speed > 0 && realTimeRecord.speed == 0) && realTimeRecord.ignition == false) {\n                let toast = this.toastController.create({\n                  message: realTimeRecord.vehicule.mark + \" s'est arrêté!\",\n                  duration: 2000,\n                  position: 'top'\n                });\n                toast.present();\n                this.isCurrentPathClicked = false;\n                this.currentPathClickedDeviceIds = null;\n              }\n            }\n          });\n        }\n      });\n\n    });\n  }\n\n \n\n  trackRealTimeRecord(realTimeRecord: RealTimeRecord) {\n    let angle = 0;\n    var date = new Date(realTimeRecord.recordTime);\n    var minutes = date.getMinutes() + \"\";\n    if (minutes.length == 1) {\n      minutes = \"0\" + date.getMinutes();\n    }\n    let icon;\n    let marker;\n    let popup;\n    if (!this.dataManagementService.pointInterests) {\n      this.dataManagementService.getAllPointInterests().subscribe(pointInterests => {\n        this.dataManagementService.pointInterests = pointInterests;\n        realTimeRecord.relativePosition = this.dataManagementService.getRelativePosition(realTimeRecord.coordinate.lat, realTimeRecord.coordinate.lng);\n      })\n    }\n    else {\n      realTimeRecord.relativePosition = this.dataManagementService.getRelativePosition(realTimeRecord.coordinate.lat, realTimeRecord.coordinate.lng);\n    }\n     if (realTimeRecord.type === \"AA\") {\n      angle = realTimeRecord.rotationAngle * 8;\n    }\n    if (this.oldRealTimeRecords && realTimeRecord.type === \"GPRMC\") {\n      let oldRealTimeRecord = this.getOldRealTimeRecord(realTimeRecord.idRealTimeRecord);\n      if (oldRealTimeRecord) {\n        if (!this.compareTwoCoordinate(oldRealTimeRecord.coordinate, realTimeRecord.coordinate)) {\n          angle = Math.atan2(realTimeRecord.coordinate.lng - oldRealTimeRecord.coordinate.lng, realTimeRecord.coordinate.lat - oldRealTimeRecord.coordinate.lat) * 180 / Math.PI;\n          this.angles.set(realTimeRecord.idRealTimeRecord, angle);\n        } else {\n          angle = this.angles.get(realTimeRecord.idRealTimeRecord);\n        }\n      }\n\n    }\n    popup = '<b>Chauffeur:</b> ' + this.dataManagementService.getDriverName(realTimeRecord.vehicule.driver) +\n    '<br><b>Matricule:</b> ' + realTimeRecord.vehicule.matricule +\n    '<br><b>Mark:</b> ' + realTimeRecord.vehicule.mark +\n    '<br><b>Lat,Lng:</b><i> [' + this.PipeLngLat(realTimeRecord.coordinate.lat) + ',' + this.PipeLngLat(realTimeRecord.coordinate.lng) + ']</i><br><b>Vitesse :</b>' + realTimeRecord.speed +\n    \"<br><b>date et l'heure:</b> \" + (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + minutes +\n    \"<br><b>Signal GSM:</b> \" + realTimeRecord.signal +\n    \" <i class='fa fa-wifi' aria-hidden='true'></i><br><b>Sat en vue:</b> \" + realTimeRecord.satInView + \" <i class='fa fa-globe' aria-hidden='true'></i>\";\n\n    marker = new Marker(realTimeRecord.coordinate, {\n      rotationAngle: angle\n    });\n     // marker.bindPopup(\"salut\")\n    if (realTimeRecord.realTimeRecordStatus == 'VALID' && realTimeRecord.speed == 0 && realTimeRecord.ignition== true) {\n      icon = new Icon({\n        iconUrl: imagesDir + \"c4x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\n        iconAnchor: [-2, 30],\n        popupAnchor: [10, -10]\n      });\n      //popup = '<ion-badge>En arrêt provisoire</ion-badge>'+ popup;\n    }\n    if (realTimeRecord.realTimeRecordStatus == 'VALID' && realTimeRecord.speed > 0 && realTimeRecord.ignition== true) {\n      icon = new Icon({\n        iconUrl: imagesDir + \"c1x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\n        iconAnchor: [-2, 30],\n        popupAnchor: [10, -25]\n      });\n      //popup = '<ion-badge color=\"secondary\">En déplacement</ion-badge>' + popup;\n    }\n    if (realTimeRecord.realTimeRecordStatus == 'VALID' && realTimeRecord.speed == 0 && realTimeRecord.ignition== false) {\n      icon = new Icon({\n        iconUrl: imagesDir + \"c3x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\n        iconAnchor: [-2, 30],\n        popupAnchor: [10, -25]\n      });\n      //popup = '<ion-badge color=\"danger\">En arrêt</ion-badge>' + popup;\n    }\n    if (realTimeRecord.realTimeRecordStatus == 'NON_VALID' || realTimeRecord.realTimeRecordStatus == 'TECHNICAL_ISSUE') {\n      icon = new Icon({\n        iconUrl: imagesDir + \"c2x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\n        iconAnchor: [-2, 30],\n        popupAnchor: [10, -25]\n      });\n      //popup = '<ion-badge color=\"dark\">En dysfonctionnement</ion-badge>' + popup;\n    }\n    realTimeRecord.icon = icon;\n    this.geocodingService.inverseGeoconding(realTimeRecord.coordinate.lat, realTimeRecord.coordinate.lng, 18).subscribe(adress => {\n      popup = popup + '<hr><b>' + adress.display_name + '</b><br>';\n      if (realTimeRecord.relativePosition) {\n        popup = popup + '<hr><center><span class=\"leaflet-pelias-layer-icon-container\"><div class=\"leaflet-pelias-layer-icon leaflet-pelias-layer-icon-point\"></div></span><strong>' + realTimeRecord.relativePosition + '</strong></center>';\n      }\n\n      //marker.bindPopup('popup');\n      \n\n      realTimeRecord.geocoding = this.getGeocoding(adress.address);\n      realTimeRecord.geocodingDetails = adress.display_name;\n      this.updateSpecificGroups(realTimeRecord);\n      let displaycurrentPath = false;\n      if (this.currentPathClickedDeviceIds != null && this.currentPathClickedDeviceIds.indexOf(realTimeRecord.idRealTimeRecord)!=-1) {\n        displaycurrentPath = true;\n        this.pathDrawn = true;\n      }\n      if(realTimeRecord.idRealTimeRecord == this.selectedDevice){\n        console.log(\"oui\");\n        this.mapService.removeAllRtMarkers();\n        console.log(\"all cleared , ready to draw\");\n      this.mapService.updateRtMarkertest(realTimeRecord.coordinate,popup,icon,realTimeRecord.idRealTimeRecord, displaycurrentPath );\n      if(this.pathDrawn == false && realTimeRecord.speed > 0){\n        this.displayCurrentPath(realTimeRecord.idRealTimeRecord);\n      }\n    }\n     // L.marker(L.latLng(realTimeRecord.coordinate.lat, realTimeRecord.coordinate.lng)).addTo(this.mapService.map).bindPopup(popup).setIcon(icon).on('click', () => {this.mapService.map.setView(realTimeRecord.coordinate, 8);\n   //});\n\n      /*this.mapService.updateRtMarker({\n        id: realTimeRecord.idRealTimeRecord,\n        value: marker,\n        icon: icon,\n        angle: angle\n      }, displaycurrentPath);*/\n\n    }, (err) => {\n      let displaycurrentPath = false;\n      if ( this.currentPathClickedDeviceIds != null && this.currentPathClickedDeviceIds.indexOf(realTimeRecord.idRealTimeRecord)!=-1) {\n        displaycurrentPath = true;\n      }\n      if(realTimeRecord.idRealTimeRecord == this.selectedDevice){\n      marker.bindPopup(popup);\n      /*this.mapService.updateRtMarker({\n        id: realTimeRecord.idRealTimeRecord,\n        value: marker,\n        icon: icon,\n        angle: angle\n      }, displaycurrentPath);*/\n      this.mapService.updateRtMarkertest(realTimeRecord.coordinate,popup,icon,realTimeRecord.idRealTimeRecord, displaycurrentPath );\n}\n    });\n  }\n\n  updateSpecificGroups(realTimeRecord: RealTimeRecord) {\n    if (this.groups)\n      this.groups.forEach(group => {\n        if (group)\n          group.vehicules.forEach(vehicule => {\n            if (vehicule.idDevice == realTimeRecord.idRealTimeRecord)\n              vehicule.realTimeRecord = realTimeRecord;\n            console.log(vehicule.realTimeRecord.icon);\n          })\n      })\n  }\n\n  getOldRealTimeRecord(id: number): RealTimeRecord {\n    let result = this.oldRealTimeRecords.filter(rt => {\n      return rt.idRealTimeRecord == id;\n    });\n    if (result) return result[0];\n    else return null;\n  }\n\n  compareTwoCoordinate(p1, p2) {\n    if (p1.lat == p2.lat && p1.lng == p2.lng) return true;\n    else false;\n  }\n\n  getGeocoding(address: any): string {\n    let geocoding: string = null;\n    if (address) {\n      if (address.road != null) {\n        geocoding = address.road;\n      }\n      if (address.neighbourhood != null) {\n        geocoding = geocoding ? geocoding + ' ' + address.neighbourhood : address.neighbourhood;\n      }\n      if (address.city != null) {\n        geocoding = geocoding ? geocoding + ' (' + address.city + ')' : address.city;\n      }\n      if (geocoding == null) {\n        geocoding = 'chargement..';\n      }\n    }\n    return geocoding;\n  }\n\n  getVehicule(idDevice: number): Vehicule {\n    let foundVehicule = new Vehicule();\n    for (let i = 0; i < this.groups.length; i++) {\n      for (let j = 0; j < this.groups[i].vehicules.length; j++) {\n        if (this.groups[i].vehicules[j].idDevice == idDevice) {\n          foundVehicule = this.groups[i].vehicules[j];\n          break;\n        }\n      }\n    }\n    return foundVehicule;\n  }\n\n  clearPolylines(){\n    this.mapService.removePolylinesFromMap();\n    this.mapService.removeMarkersFromMap();\n    this.pathDrawn = false;\n}\n\nPipeLngLat(value: any) {\n  return this.pipe.transform(value, '2.2-6');\n}\n\ndisplayCurrentPath(deviceId: number) {\n  console.log(\"le trajet se trace:\"+deviceId);\n  this.realTimeService.getCurrentPath(deviceId).subscribe(currentPath => {\n    //console.log(currentPath);\n      if (currentPath != null) {\n          let polyline = L.polyline(currentPath.coordinates, {color: '#0031D9', weight: 3});\n          currentPath.coordinates.forEach((coordinate, i) => {\n              let marker = new Marker(coordinate);\n              if (i != 0 && i != currentPath.coordinates.length - 1) {\n                  marker.setIcon(new Icon({\n                      iconUrl: imagesDir + \"green-point.png\",\n                      iconAnchor: [2, 2]\n                  }));\n                  this.mapService.addMarker(marker);\n              }\n          });\n\n          let startMarker = L.marker({lat : currentPath.beginPathLatitude, lng: currentPath.beginPathLongitude});\n          startMarker.setIcon(new Icon({\n              iconUrl: imagesDir + \"startMarker.png\",\n              iconAnchor: [-2, 30],\n              popupAnchor: [10, -25]\n          }));\n          startMarker.on('click', () => {this.mapService.map.setView({lat : currentPath.beginPathLatitude, lng: currentPath.beginPathLongitude}, 14);});\n          this.mapService.addMarker(startMarker);\n          this.mapService.addPolyline(polyline);\n          this.pathDrawn = true;\n      }\n      this.previousPathdrawn = true;\n  }, (err) => {\n    this.previousPathdrawn = false;\n  });\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/real-time/real-time.ts","import {Injectable} from '@angular/core';\nimport {Http} from \"@angular/http\";\nimport {Subscription} from \"rxjs\";\nimport {Observable} from \"rxjs\";\nimport { dns,nominatim_dns } from \"../providers/global.config\";\n@Injectable()\nexport class GeocodingService {\n\n    geocodingSubscription: Subscription;\n    token: string;\n    \n    constructor(private _http: Http) {\n    }\n\n    distance(lat1, lon1, lat2, lon2) {\n        var p = 0.017453292519943295;    // Math.PI / 180\n        var c = Math.cos;\n        var a = 0.5 - c((lat2 - lat1) * p) / 2 +\n            c(lat1 * p) * c(lat2 * p) *\n            (1 - c((lon2 - lon1) * p)) / 2;\n        var distance = 12742 * Math.asin(Math.sqrt(a));\n        return distance;\n    }\n\n    inverseGeoconding(latitude: number, longitude: number, zoom: number): Observable<any> {\n        return this._http.get(nominatim_dns + '/reverse.php?format=json&lat=' + latitude + '&lon=' + longitude + '&zoom=' + zoom + '&accept-language=fr&addressdetails=1').map(res => res.json());\n    }\n\n    getMyIpAdress(): Observable<{ip: string}> {\n        return this._http.get('http://api.ipify.org/?format=json').map(res => res.json());\n    }\n\n    getMyLocation(ip: string) {\n        return this._http.get('freegeoip.net/json/' + ip).map(res => res.json());\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geocoding.service.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ToastController,ModalController,ViewController  } from 'ionic-angular';\nimport { RealTimeService } from '../../providers/real-time.service';\nimport { Subscription } from \"rxjs\";\n\n\n@Component({\n  selector: 'page-groups-page',\n  templateUrl: 'groups-page.html',\n})\nexport class GroupsPage {\n  allGroups: Subscription;\n  groups: any[];\n  selectedDevice: number;\n  searchWord : string;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController, public realTimeService: RealTimeService) {\n    this.groups = navParams.get('groups');\n    //this.groups = this.processGroups(this.groups);\n  }\n\n /* processGroups(groups: any){\n    groups.forEach(group => {\n      \n    });\n    return groups;\n  }*/\n\n  closeModal(){\n    this.viewCtrl.dismiss(this.selectedDevice);\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad GroupsPage');\n  }\n\n  searchGroup(){\nthis.allGroups = this.realTimeService.getAllGroups(this.searchWord).subscribe(groupes => {\n      this.groups = groupes;\n      console.log(this.groups);\n    });\n  }\n\n  goToRealTimeRecord(deviceId: number){\n    this.selectedDevice = deviceId;\n    this.viewCtrl.dismiss(this.selectedDevice);\n  }\n\n  startEngine(){\n    console.log(\"startEngine\");\n  }\n\n  stopEngine(){\n    console.log(\"stopEngine\");\n  }\n\n  displayTodaysMileage(){\n    console.log(\"displayTodaysMileage\");\n  }\n\n  displayCurrentPath(){\n    console.log(\"displayCurrentPath\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/groups-page/groups-page.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ModalController, LoadingController } from 'ionic-angular';\nimport { DatePipe } from '@angular/common';\nimport { MapService } from \"../../utils/map.service\";\nimport { HistoricalService } from \"../../providers/historical.service\";\nimport { DataManagementService } from \"../../providers/data-management.service\";\nimport { HistoricalForm } from '../historical-form/historical-form';\nimport { PathsList } from '../paths-list/paths-list';\nimport { Subscription } from \"rxjs\";\nimport { imagesDir } from \"../../providers/global.config\";\nimport Marker = L.Marker;\nimport Icon = L.Icon;\nimport 'leaflet';\n\n\n@Component({\n  selector: 'page-historical',\n  templateUrl: 'historical.html',\n})\nexport class Historical {\n\n  allPaths: Subscription;\n  paths: any[];\n  loader: any;\n\n  constructor(private dataManagementService: DataManagementService, private historicalService: HistoricalService, public loadingCtrl: LoadingController, public modalCtrl: ModalController, public navCtrl: NavController, public navParams: NavParams, public mapService: MapService) {\n  }\n\n  ionViewWillEnter() {\n    this.init();\n  }\n\n  init() {\n    this.initMap();\n   // this.openFormModal();\n  }\n\n  initMap() {\n    if (this.mapService.map) this.mapService.map.remove();\n    let map = L.map('historicalMap', {\n      zoomControl: false,\n      center: L.latLng(32.586163, -9.912118),\n      zoom: 6,\n      minZoom: 3,\n      maxZoom: 20,\n      maxNativeZoom: 17,\n      layers: [this.mapService.baseMaps.RimTelecom]\n    });\n    L.control.zoom({ position: 'topright' }).addTo(map);\n    this.mapService.map = map;\n  }\n\n  openFormModal() {\n    let formModal = this.modalCtrl.create(HistoricalForm);\n    formModal.present();\n    formModal.onDidDismiss(form => {\n      if (form != null) {\n      //let firstDateStr = form.firstDate.split(\"-\");\n      //let firstDate = firstDateStr[2] + \"/\" + firstDateStr[1] + \"/\" + firstDateStr[0];\n      let firstDateTime = form.firstDate.getTime();\n      //let lastDateStr = form.lastDate.split(\"-\");\n     // let lastDate = lastDateStr[2] + \"/\" + lastDateStr[1] + \"/\" + lastDateStr[0];\n      let lastDateTime =form.lastDate.getTime();\n      this.loader = this.loadingCtrl.create({\n        content: \"Veuillez attendre...\"\n      });\n      this.loader.present();\n      this.allPaths = this.historicalService.getAllPaths(form.selectedDeviceId, {\n        startDate: firstDateTime,\n        endDate: lastDateTime\n      }).subscribe(paths => {\n        this.paths = paths;\n        if(this.paths != null)\n        this.paths.forEach(path => {\n\n          var date = new Date(path.beginPathTime-3600000);\n          var hours = date.getHours();\n          var minutes = \"0\" + date.getMinutes();\n          path.displayBeginPathTime = hours + ':' + minutes.substr(-2);\n\n          date = new Date(path.endPathTime-3600000);\n          hours = date.getHours();\n          minutes = \"0\" + date.getMinutes();\n          path.displayEndPathTime = hours + ':' + minutes.substr(-2);\n\n          path.beginPathGeocodingDetails = this.dataManagementService.getRelativePosition(path.beginPathLatitude, path.beginPathLongitude);\n          path.beginPathGeocoding = path.beginPathGeocodingDetails;\n          if (path.beginPathGeocodingDetails == null) {\n            this.dataManagementService.inverseGeoconding(path.beginPathLatitude, path.beginPathLongitude, 17).subscribe(adress => {\n              path.beginPathGeocoding = this.processGeocoding(adress.display_name);\n              if (adress.address.road != null && adress.address.neighbsourhood != null && adress.address.city != null) {\n                path.beginPathGeocoding = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\n                path.beginPathGeocodingDetails = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\n              } \n              /*else {\n                let truncatedDisplayName = adress.display_name;\n                let countCommas = 0;\n                for (var i = 0, len = adress.display_name.length; i < len; i++) {\n                  if (adress.display_name[i] == ',') {\n                    countCommas = countCommas + 1;\n                  } else if (countCommas >= 4) {\n                    truncatedDisplayName = adress.display_name.substring(0, i - 1);\n                    path.beginPathGeocoding = truncatedDisplayName;\n                    path.beginPathGeocodingDetails = path.beginPathGeocoding;\n                    break;\n                  }\n                }\n              }*/\n            }, (err) => {\n              path.beginPathGeocodingDetails = null;\n              path.beginPathGeocoding = null;\n            });\n          }\n          path.endPathGeocodingDetails = this.dataManagementService.getRelativePosition(path.endPathLatitude, path.endPathLongitude);\n          path.endPathGeocoding = path.endPathGeocodingDetails;\n          if (path.endPathGeocodingDetails == null) {\n            this.dataManagementService.inverseGeoconding(path.endPathLatitude, path.endPathLongitude, 17).subscribe(adress => {\n              path.endPathGeocoding = this.processGeocoding(adress.display_name);\n              if (adress.address.road != null && adress.address.neighbsourhood != null && adress.address.city != null) {\n                path.endPathGeocoding = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\n                path.endPathGeocodingDetails = path.endPathGeocoding;\n              } \n              /*else {\n                let truncatedDisplayName = adress.display_name;\n                let countCommas = 0;\n                for (var i = 0, len = adress.display_name.length; i < len; i++) {\n                  if (adress.display_name[i] == ',') {\n                    countCommas = countCommas + 1;\n                  } else if (countCommas >= 5) {\n                    truncatedDisplayName = adress.display_name.substring(0, i - 1);\n                    path.endPathGeocoding = truncatedDisplayName;\n                    path.endPathGeocodingDetails = path.endPathGeocoding;\n                    break;\n                  }\n                }\n              }*/\n            }, (err) => {\n              path.endPathGeocodingDetails = null;\n              path.endPathGeocoding = null;\n            });\n          }\n        \n        });\n        this.openResultsModal();\n        this.loader.dismiss();\n      });\n    }\n    });\n  }\n\n  openResultsModal() {\n    let pathsListModal = this.modalCtrl.create(PathsList, { paths: this.paths });\n    pathsListModal.present();\n    pathsListModal.onDidDismiss(pathClicked => {\n      if (pathClicked != null)\n      this.drawPath(pathClicked);\n    });\n  }\n\n  drawPath(path: any) {\n    this.mapService.removePolylinesFromMap();\n    this.mapService.removeMarkersFromMap();\n    this.historicalService.getPathDetails(path.deviceId, {\n      startDate: path.beginPathTime,\n      endDate: path.endPathTime\n    }).subscribe(points => {\n      let stopMarkers: Marker[] = [];\n      points.stops.forEach(stop => {\n        let popup = \"<img src='\" + imagesDir + \"stop_smal.png\" + \"'/> Durée d'arrêt : \" + stop.stopDurationStr;\n        /*let stopMarker = new Marker({\n          lat: stop.stopLatitude,\n          lng: stop.stopLongitude\n        });*/\n        let stopMarker = L.marker({lat : stop.stopLatitude, lng: stop.stopLongitude});\n        stopMarker.addTo(this.mapService.map);\n        stopMarker.on('click', () => {this.mapService.map.setView({lat : stop.stopLatitude, lng: stop.stopLongitude}, 14);});\n        this.dataManagementService.inverseGeoconding(stop.stopLatitude, stop.stopLongitude, 18).subscribe(adress => {\n          let truncatedDisplayName = adress.display_name;\n          let countCommas = 0;\n          for (var i = 0, len = adress.display_name.length; i < len; i++) {\n            if (adress.display_name[i] == ',') {\n              countCommas = countCommas + 1;\n            } else if (countCommas >= 5) {\n              truncatedDisplayName = adress.display_name.substring(0, i - 1);\n              break;\n            }\n          }\n          popup = popup + '<br><hr><b>' + truncatedDisplayName + '</b>';\n          stopMarker.bindPopup(popup);\n        });\n        stopMarker.setIcon(new Icon({\n          iconUrl: imagesDir + \"stop_smal.png\",\n          iconAnchor: [-2, 30],\n          popupAnchor: [10, -25]\n        }));\n        this.mapService.addMarker(stopMarker);\n      });\n      let polyline = L.polyline(points.coordinates, { color: '#0031D9', weight: 3 });\n      points.coordinates.forEach((coordinate, i) => {\n        let marker = L.marker(coordinate);\n        console.log(new Date(points.coordinates[0].date));\n        if (i != 0 && i != points.coordinates.length - 1) {\n          marker.setIcon(new Icon({\n            iconUrl: imagesDir + \"green-point.png\",\n            iconAnchor: [2, 2]\n          }));\n          var pointDatePipe = new DatePipe(coordinate.date);\n          let popup = '<b>Heure:</b> ' + pointDatePipe.transform(coordinate.date, 'dd/MM/yyyy HH:mm:ss') + '<b><br>vitesse:</b> ' + coordinate.speed + ' Km/h';\n          marker.bindPopup(popup);\n          marker.on('click', () => {\n            this.mapService.map.setView(coordinate, 17);\n          });\n          this.mapService.addMarker(marker);\n        }\n      });\n      let startMarker = L.marker({ lat: path.beginPathLatitude, lng: path.beginPathLongitude });\n      let startTime: any = path.beginPathTime;\n      var startDatePipe = new DatePipe(startTime);\n      startMarker.bindPopup('<b> Lieu de début: </b>' + path.beginPathGeocoding +'<b></i><br>Temps de début du trajet : </b>' + startDatePipe.transform(startTime, 'dd/MM/yyyy HH:mm:ss'));\n      startMarker.setIcon(new Icon({\n        iconUrl: imagesDir + \"startMarker.png\",\n        iconAnchor: [-2, 30],\n        popupAnchor: [10, -25]\n      }));\n      this.mapService.addMarker(startMarker);\n      if (path.endPathLatitude != null && path.endPathLongitude != null && path.endPathTime != null) {\n        var endMarker = L.marker({ lat: path.endPathLatitude, lng: path.endPathLongitude });\n        let endTime: any = path.endPathTime;\n        var endDatePipe = new DatePipe(endTime);\n        endMarker.bindPopup('<b> Lieu de fin: </b>' + path.endPathGeocoding +'<br><b>Temps de fin du trajet : </b>' + endDatePipe.transform(endTime, 'dd/MM/yyyy HH:mm:ss')\n                    + '<br><b> Durée du trajet : </b>' + path.pathDurationStr + \"<br><b> Durée d'arrêt : </b>\" + path.nextStopDurationStr + \"<br><b> Vitesse maximum : </b>\"\n                    + path.maxSpeed + \" Km/h <br><b> Kilometrage parcouru : </b>\" + path.distanceDriven.toFixed(2) + ' Km'\n);\n        endMarker.setIcon(new Icon({\n          iconUrl: imagesDir + \"endMarker.png\",\n          iconAnchor: [-2, 30],\n          popupAnchor: [10, -25]\n        }));\n        this.mapService.addMarker(endMarker);\n      }\n      this.mapService.addPolyline(polyline);\n      var middle = points.coordinates[Math.round((points.coordinates.length - 1) / 2)];\n      this.mapService.map.setView(middle, 12);\n    });\n  }\n\n  ionViewDidLoad() {\n    this.openFormModal();\n  }\n\n  processGeocoding(geocoding: string): string{\n    if (geocoding != null){\n      let array = geocoding.split(',',3);\n      let smallerGeocoding = '';\n      array.forEach(word => {\n        smallerGeocoding = smallerGeocoding + ', ' + word;\n      });\n      smallerGeocoding = smallerGeocoding.slice(2,smallerGeocoding.length);      \n      return smallerGeocoding;\n    }else \n    return null; \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/historical/historical.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ModalController, ViewController,LoadingController } from 'ionic-angular';\nimport { HistoricalService } from '../../providers/historical.service';\nimport { Subscription } from \"rxjs\";\n\n\n@Component({\n  selector: 'page-historical-form',\n  templateUrl: 'historical-form.html',\n})\nexport class HistoricalForm {\n\n  allGroups: Subscription;\n  selectedDeviceId: any;\n  groups: any[];\n  selectedGroup: any;\n  vehicules: any;\n  firstDate: any;\n  lastDate: any;\n\n  selectedGroupId: any;\n\n  loader: any;\n\n  constructor(private historicalService: HistoricalService, public viewCtrl: ViewController, public navCtrl: NavController, public navParams: NavParams, public loadingCtrl: LoadingController) {\n    this.init();\n  }\n\n  ionViewWillEnter() {\n    \n  }\n\n  init() {\n    this.loader = this.loadingCtrl.create({\n      content: \"Veuillez attendre...\"\n    });\n    this.loader.present();\n    this.loadGroups();\n  }\n\n\n  ionViewDidLoad() {\n\n  }\n\n  loadGroups() {\n    this.allGroups = this.historicalService.getAllGroups().subscribe(groupes => {\n      this.groups = groupes;\n      this.selectedGroup = this.groups[0];\n      this.vehicules = this.selectedGroup.vehicules;\n      if (this.vehicules.length > 0 && this.vehicules) {\n        this.selectedDeviceId = this.vehicules[0].idDevice;\n      }\n      /*this.groups.forEach(group => {\n        if(group.vehicules.length == 0 && this.groups != null){\n          this.groups.splice(this.groups.indexOf(group));\n        }\n      });*/\n      this.loader.dismiss();\n    });\n  }\n\n  chooseGroup(group) {\n    this.selectedGroup = group;\n    this.selectedGroupId = group;\n    this.groups.forEach(gr => {\n      if(gr.idGroupe == group){\n        this.vehicules = gr.vehicules;\n      }\n    })\n    if (this.vehicules.length > 0 && this.vehicules) {\n      this.selectedDeviceId = this.vehicules[0].idDevice;\n    }\n  }\n\n  chooseVehicule(vehiculeId) {\n    this.selectedDeviceId = vehiculeId;\n  }\n\n  getAllPaths() {\n    var date = new Date();  \n    this.firstDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\n    this.lastDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);\n    this.viewCtrl.dismiss({ selectedDeviceId: this.selectedDeviceId, firstDate: this.firstDate, lastDate: this.lastDate });\n  }\n\n  modalDismiss(){\n   this.viewCtrl.dismiss(null);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/historical-form/historical-form.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ModalController,LoadingController,ViewController } from 'ionic-angular';\n\n\n@Component({\n  selector: 'page-paths-list',\n  templateUrl: 'paths-list.html',\n})\nexport class PathsList {\n\n  paths: any[];\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController) {\n    this.paths = navParams.get('paths');\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad PathsList');\n  }\n\n  drawPath(path: any){\n    this.viewCtrl.dismiss(path);\n  }\n\n  closeModal(){\n    this.viewCtrl.dismiss(null);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/paths-list/paths-list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport {DecimalPipe} from '@angular/common';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { Login } from '../providers/login';\nimport { MapPage } from '../pages/map-page/map-page';\nimport { Historical } from '../pages/historical/historical';\nimport { RealTime } from '../pages/real-time/real-time';\nimport { GroupsPage } from '../pages/groups-page/groups-page';\nimport { HistoricalForm } from '../pages/historical-form/historical-form';\nimport { PathsList } from '../pages/paths-list/paths-list';\nimport { GeocodingService } from '../utils/geocoding.service';\nimport { MapService } from '../utils/map.service';\nimport {RealTimeService} from '../providers/real-time.service';\nimport {HistoricalService} from '../providers/historical.service';\nimport { DataManagementService } from '../providers/data-management.service';\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    MapPage,\n    Historical,\n    RealTime,\n    GroupsPage,\n    HistoricalForm,\n    PathsList\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    MapPage,\n    Historical,\n    RealTime,\n    GroupsPage,\n    HistoricalForm,\n    PathsList\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    Login,\n    GeocodingService,\n    MapService,\n    RealTimeService,\n    DataManagementService,\n    HistoricalService,\n    DecimalPipe,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Headers} from '@angular/http';\n\nexport const contentHeaders = new Headers();\ncontentHeaders.append('Accept', 'application/json');\ncontentHeaders.append('Content-Type', 'application/json');\n\nexport function createAuthorizationHeader(headers: Headers) {\n    headers.append('Authorization', localStorage.getItem('id_token'));\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/headers.ts","import {Driver} from \"./data-management\";\n\nexport class RealTimeRecord {\n    \n        idRealTimeRecord: number;\n        recordTime: Date;\n        coordinate: {lat: number,lng: number};\n        speed: number;\n        temperature: string;\n        validity: boolean;\n        ignition: boolean;\n        power: number;\n        mems_x: number;\n        mems_y: number;\n        mems_z: number;\n        sendFlag: number;\n        type:'AA'|'GPRMC';\n        satInView: number;\n        signal: string;\n        heading: number;\n        matricule: string;\n        mark: string;\n        realTimeRecordStatus: string;\n        geocoding: string;\n        geocodingDetails: string;\n        relativePosition: string;\n        rotationAngle: number;\n        icon : string;\n    \n        vehicule: Vehicule = null;\n    \n        constructor() {\n            this.geocoding = `Chargement..`;\n            this.geocodingDetails = 'Chargement..';\n            this.speed = 0;\n            this.recordTime = new Date();\n            this.coordinate = {lat: 0, lng: 0};\n            this.realTimeRecordStatus = '';\n            this.rotationAngle= 0;\n        }\n    \n    }\n    \n    export class Group {\n        nom: string;\n        isOpen: boolean;\n        vehicules: Vehicule[];\n         icon: string;\n    }\n    \n    export class Vehicule {\n        idDevice: number;\n        matricule: string;\n        mark: string;\n        recordTime: Date;\n        coordinate: {lat: number,lng: number};\n        geocoding: string;\n        geocodingDetails: string;\n        speed: number;\n        driverName: string;\n        driver: Driver;\n    \n        realTimeRecord: RealTimeRecord;\n    \n        constructor() {\n            this.realTimeRecord = new RealTimeRecord();\n        }\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/objects/real-time.ts","\n//export var dns: string = \"http://79.137.75.178:8080/ws_rimtrack_all_dev/\";\n//export var dns: string = \"http://localhost:8080/rimtrack-all-v2/\";\nexport var dns: string = \"http://37.187.171.84:8080/ws_rimtrack_all/\";\nexport var imagesDir: string = \"http://79.137.75.178:8080/images/\";\nexport var nominatim_dns:string = \"http://37.187.171.84/nominatim\";\n\n\n// WEBPACK FOOTER //\n// ./src/providers/global.config.ts","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs/Observable';\nimport {Http, Headers} from '@angular/http';\nimport {dns} from \"./global.config\";\nimport {RealTimeRecord, Group} from \"../objects/real-time\";\nimport {Poi} from \"../objects/poi\";\n\n@Injectable()\nexport class RealTimeService {\n\n    token: string;\n\n    constructor(private _http: Http) {\n\n    }\n\n    getRealTimeRecord(deviceId: number): Observable<RealTimeRecord> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.get(dns + 'realTimeRecords/' + deviceId, {headers: headers}).map(res => res.json());\n    }\n\n    getAllPois(): Observable<Poi[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.get(dns + 'pointInterests/dtos', {headers: headers}).map(res => res.json());\n    }\n\n    getAllRealTimeRecords(): Observable<RealTimeRecord[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.get(dns + 'realTimeRecords', {headers: headers}).map(res => res.json());\n    }\n\n    getAllGroups(keyword: string): Observable<Group[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.get(dns + 'groupes/details?keyword=' + keyword, {headers: headers}).map(res => res.json());\n    }\n\n    getCurrentPath(deviceId: number): Observable<any> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.post(dns + 'paths/currentPath/' + deviceId,null,  {headers: headers}).map(res => res.json());\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/real-time.service.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport {Http, Headers} from '@angular/http';\nimport { dns,nominatim_dns } from \"./global.config\";\nimport {PointInterest, GroupDto, VehiculesDto,Driver} from \"../objects/data-management\";\n\n@Injectable()\nexport class DataManagementService {\n\n    pointInterests: PointInterest[] = null;\n    token: string;\n    groups: GroupDto[] = null;\n\n    selectedGroup:GroupDto = null;\n    selectedVehiculeId:number = null;\n\n    constructor(private _http: Http) {\n    }\n\n    inverseGeoconding(latitude: number, longitude: number, zoom: number): Observable<any> {\n        return this._http.get(nominatim_dns + '/reverse.php?format=json&lat=' + latitude + '&lon=' + longitude + '&zoom=' + zoom + '&accept-language=fr&addressdetails=1').map(res => res.json());\n    }\n\n    getAllPointInterests(): Observable<PointInterest[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.get(dns + 'pointInterests', {headers: headers}).map(res => res.json());\n    }\n\n    addPointInterest(pointInterest: PointInterest): Observable<PointInterest> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.post(dns + 'pointInterests', pointInterest, {headers: headers}).map(res => res.json());\n    }\n\n    getAllGroups(): Observable<GroupDto[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.get(dns + 'groupes/minify', {headers: headers}).map(res => res.json());\n    }\n\n    // must exe only if pointInterests not NULL !!!\n    getRelativePosition(lat: number, lng: number): string {\n        let relativePosition = null;\n        this.pointInterests.forEach(pointInterest => {\n            let distance = this.distance(lat, lng, pointInterest.coordinate.lat, pointInterest.coordinate.lng);\n            if (distance < pointInterest.ray / 1000) {\n                relativePosition = pointInterest.name;\n            }\n            /*if (distance > pointInterest.ray / 1000 && distance < 0.1) {\n                relativePosition = Math.round(distance * 1000) + \" metre de \" + pointInterest.name;\n            }*/\n            if (distance > pointInterest.ray / 1000 && distance <0.2) {\n                let distanceStr = distance.toString().substr(0, 4);\n                relativePosition = \"à \" + distanceStr + \" Km de \" + pointInterest.name;\n            }\n        });\n        return relativePosition;\n    }\n\n    distance(lat1, lon1, lat2, lon2) {\n        var p = 0.017453292519943295;    // Math.PI / 180\n        var c = Math.cos;\n        var a = 0.5 - c((lat2 - lat1) * p) / 2 +\n            c(lat1 * p) * c(lat2 * p) *\n            (1 - c((lon2 - lon1) * p)) / 2;\n        var distance = 12742 * Math.asin(Math.sqrt(a));\n        return distance;\n    }\n\n    getDriverName(driver: Driver) {\n        if (driver) {\n            if (driver.firstName && driver.lastName) {\n                return driver.firstName + ' ' + driver.lastName;\n            }\n            else if (driver.firstName) {\n                return driver.firstName;\n            }\n            else if (driver.lastName) {\n                return driver.lastName;\n            }\n            else return \"anonyme\";\n        }\n        else return \"pas de chauffeur\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data-management.service.ts","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs/Observable';\nimport {Http, Headers} from '@angular/http';\nimport {dns} from \"./global.config\";\n\n@Injectable()\nexport class HistoricalService {\n\n    token: string;\n\n    constructor(private _http: Http) {\n\n    }\n\n    getAllGroups(): Observable<any[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.get(dns + 'groupes/minify', {headers: headers}).map(res => res.json());\n    }\n\n    getAllPaths(deviceId: number, dateInterval: any): Observable<any[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.post(dns + 'paths/' + deviceId, dateInterval, {headers: headers}).map(res => res.json());\n    }\n\n    getCurrentPath(deviceId: number): Observable<any> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.post(dns + 'paths/currentPath/' + deviceId,null,  {headers: headers}).map(res => res.json());\n    }\n\n    getPathDetails(deviceId: number, dateInterval: any): Observable<any> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.token);\n        return this._http.post(dns + 'paths/details/' + deviceId, dateInterval, {headers: headers}).map(res => res.json());\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/historical.service.ts"],"sourceRoot":""}